echo()
echo('031AffineRegistration')
echo()

set( FIRST TRUE )
set( TRANSFORM_LIST '')
set( MD_CASES '' )
set( ALL_OTHER_CASES '' )
set( IMCmd ${ImageMath} ${FIXED_IMG} -rescale 0,10000 -type float -outfile ${RESCALED_FIXED_IMG} )
echo(${IMCmd})
If( ${step} < 4 && ${times} == 0 ) 
  run( output ${IMCmd} )
  echo( ${output} )
EndIf()
If( ${step} < 10 && ${times} == 1 )
  run( output ${IMCmd} )
  echo( ${output} )
EndIf()


foreach( i ${CASES} )
  ################################################
  ###Histogram Match###
  RegEx( MASKED_INPUT_TAG ${POPULATION_AVERAGE_INPUT_TAG}${MASK_TAG} '\*' REPLACE ${i} )
  set( IMG ${tempDir}/${MASKED_INPUT_TAG}.nrrd )
  set( MOVING_IMG ${tempDir}/${MASKED_INPUT_TAG}_hm.nrrd )
  set( HMCmd ${ImageMath} ${IMG} -matchHistogram ${RESCALED_FIXED_IMG} -outfile ${MOVING_IMG} -type float)
  echo( ${HMCmd} )
  If(${step} < 5 && ${times} == 0 )
    run( output ${HMCmd} )
    echo( ${output} )
  EndIf()
  If(${step} < 11 && ${times} == 1)
    run( output ${HMCmd} )
    echo( ${output} )
  EndIf()

  # BRAINSFit
  set( TRANSFORM_PREFIX ${tempDir}/${i}_to_${FIXED_CASE}_${times} ) 
  set( RESAMPLED_IMAGE ${TRANSFORM_PREFIX}.nrrd )
  set( TRANSFORM ${TRANSFORM_PREFIX}_Affine_d.txt )
  RegEx( MOVING_MASK ${INPUT_MASK_FILE} '\*' REPLACE ${i} )

  set ( Cmd ${BRAINSFit} --costMetric NC --outputTransform ${TRANSFORM} --transformType Affine --translationScale 10 --interpolationMode BSpline --outputVolume ${RESAMPLED_IMAGE} --movingVolume ${MOVING_IMG} --fixedVolume ${RESCALED_FIXED_IMG} --maskProcessingMode ROI --fixedBinaryVolume ${FIXED_MASK} --movingBinaryVolume ${MOVING_MASK} --minimumStepLength .005 --skewScale 0.05 )
  echo( ${Cmd} )
  If(${step} < 6 && ${times} == 0 )
    run( output ${Cmd} )
    echo( ${output} )
  EndIf()
  If(${step} < 12 && ${times} == 1)
    run( output ${Cmd} )
    echo( ${output} )
  EndIf()

  ####Convert transform files from AffineTransform_double_3_3 to AffineTransform_float_3_3 for GreedyAtlas###
  set( TRANSFORM_FLOAT ${TRANSFORM_PREFIX}_Affine_f.txt )
  set( Cmdd2f ${ITKTransformTools} convert ${TRANSFORM} ${TRANSFORM_FLOAT} d2f )
  echo( ${Cmdd2f} )
  If(${step} < 7 && ${times} == 0 )
    run( output ${Cmdd2f} )
    echo( ${output} )
  EndIf()
  If(${step} < 13 && ${times} == 1)
    run( output ${Cmdd2f} )
    echo( ${output} )
  EndIf()
  set( TRANSFORM_LIST ${TRANSFORM_LIST} ${TRANSFORM_FLOAT} )
  set( MD_CASES ${MD_CASES} ${MOVING_IMG} )
  ####List of images to compute average affinely registered images
  if( ${FIRST} == TRUE )
    set( FIRST_CASE ${RESAMPLED_IMAGE} )
    set( FIRST FALSE )
  else( ${FIRST} == TRUE )
    set( ALL_OTHER_CASES ${RESAMPLED_IMAGE} ${ALL_OTHER_CASES} )
  endif( ${FIRST} == TRUE )
endforeach( ${CASES} )

Inc( ${times} 1 )
Int( ${times} )
