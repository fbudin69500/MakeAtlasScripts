### The script uses:
#- ImageMath
#- BRAINSFit
#- ResampleVolume2
#- ResampleDTIlogEuclidean
#- GreedyAtlas
#- ITKTransformTools
#########################Mask image used to compute average#############

foreach( i ${CASES} )
  RegEx( OutSubjDir ${CASES_OUTPUT_DIR} '\*' REPLACE ${i} )
  MakeDirectory( ${OutSubjDir} )
  ##Save config file in each sub dir of each case
  if( ${ScriptName} != '' )
    GetFilename( name ${ScriptName} NAME )
    CopyFile( ${ScriptName} ${OutSubjDir}/${name} )
  Endif( ${ScriptName} != '' )
  RegEx( MD ${POPULATION_AVERAGE_INPUT_FILES} '\*' REPLACE ${i} )
  RegEx( MASK ${INPUT_MASK_FILE} '\*' REPLACE ${i} )
  RegEx( CASE_INPUT_TAG ${POPULATION_AVERAGE_INPUT_TAG} '\*' REPLACE ${i} )
  set( maskedMD ${tempDir}/${CASE_INPUT_TAG}${MASK_TAG}.nrrd )
  set( Cmd ${ImageMath} ${MD} -mask ${MASK} -outfile ${maskedMD} -type float)
  echo( ${Cmd} )
  If( ${step} < 1 )
    run( output ${Cmd} )
    echo( ${output} )
  EndIf( ${step} < 1 )
  if( ${Mradius} != 0 )
    set( MedianMD ${tempDir}/${CASE_INPUT_TAG}${MASK_TAG}_median.nrrd )  
    set( Cmd ${MedianImageFilter} --neighborhood ${Mradius},${Mradius},${Mradius} ${maskedMD} ${MedianMD} )
    echo( ${Cmd} )
    If( ${step} < 2 )
      run( output ${Cmd} )
      echo( ${output} )
    EndIf( ${step} < 2 )
  else( ${Mradius} != 0 )
    set( MedianMD ${maskedMD} )
  endif( ${Mradius} != 0 )
  set( paddedMD ${tempDir}/${CASE_INPUT_TAG}${MASK_TAG}_padded.nrrd )
  set( Cmd ${unu} pad -i ${MedianMD} -o ${paddedMD} -min -5 -5 -5 -max M+5 M+5 M+5 -b pad )
  echo( ${Cmd} )
  If( ${step} < 3 )
    run( output ${Cmd} )
    echo( ${output} )
  EndIf( ${step} < 3 )
endforeach( ${CASES} )

set( POPULATION_AVERAGE_INPUT_MASKED_TAG ${POPULATION_AVERAGE_INPUT_TAG}${MASK_TAG}_padded )
#########################affine registration###############################
##affinely register all cases once they are skullstripped
set( times 0 )
GetParam(FIXED_CASE ${CASES} 0)
RegEx( FIXED_IMG ${tempDir}/${POPULATION_AVERAGE_INPUT_MASKED_TAG}.nrrd '\*' REPLACE ${FIXED_CASE} )
RegEx( RESCALED_FIXED_IMG ${tempDir}/${POPULATION_AVERAGE_INPUT_MASKED_TAG}_hm_resc_${times}.nrrd '\*' REPLACE ${FIXED_CASE} )
RegEx( FIXED_MASK ${INPUT_MASK_FILE} '\*' REPLACE ${FIXED_CASE} )
include( 031AffineRegistration.bms )


set( avgImage ${tempDir}/AverageAffineImage.nrrd )
set( Cmd ${ImageMath} ${FIRST_CASE} -avg ${ALL_OTHER_CASES} -outfile ${avgImage} )
#The mask computed on the new average image has some non-nul value in the background.
#Computing This mask was creating an image entirely filled with "ones"
#Instead, we keep the mask of the first image that is more or less aligned with this average.
#This gives a much better result.
If( ${step} < 9 )
  Run( output ${Cmd} )
  echo( ${output} )
EndIf( ${step} < 9 )
set(FIXED_CASE AverageAffineImage )
set( FIXED_IMG ${avgImage} )
set( RESCALED_FIXED_IMG ${tempDir}/AverageAffineImage_resc.nrrd )
include( 031AffineRegistration.bms )
####################Create average##############################################
set( GreedyAtlasOutputPrefix 'GreedyAtlas' )
set( GreedyAtlasOutputExtension 'mhd' )
##Saves config file in average dir
if( ${ScriptName} != '' )
  ExitOnError( 'TRUE' )
  GetFilename( name ${ScriptName} NAME )
  CopyFile( ${ScriptName} ${outputDir}/${name} )
  ExitOnError( 'FALSE' )
Endif( ${ScriptName} != '' )

If( ${step} < 14 )
  include( 034CreateXML.bms )
Endif( ${step} < 14 )
set ( GreedyAtlasCmd ${GreedyAtlas} -f ${tempDir}/AW.xml -o ${tempDir}/GreedyAtlasParsedOutput.xml )

If( ${step} < 15 )
  run ( output ${GreedyAtlasCmd})
  echo ( ${output} )
Endif( ${step} < 15 )

###################Save H-Fields#########################################
set( count 1 )###We set to '1' because '0' is a space (so empty variable after extraction from the list) in MD_CASES
Int( ${count} )###We have to add this line, otherwise '1' is not directly recognized as a number. Other numbers (0,2,...) are though....
foreach( i ${CASES} )
  GetParam( GreedyAtlasInputName ${MD_CASES} ${count} )
  GetFileName( GreedyAtlasOutputRootName ${GreedyAtlasInputName} NAME_WITHOUT_EXTENSION )
  RegEx( OutSubjDir ${CASES_OUTPUT_DIR} '\*' REPLACE ${i} )
  set( hfield ${tempDir}/${GreedyAtlasOutputPrefix}${GreedyAtlasOutputRootName}DefFieldMeanToIm.${GreedyAtlasOutputExtension} )
  Set( COPIED_HFIELD ${OutSubjDir}/${i}_hFieldToPopAverage.mha )
  Set( Cmd ${ResampleVolume2} ${hfield} ${COPIED_HFIELD} -i nn )
  If( ${step} < 16 )
    Run( output ${Cmd} )
    echo( ${output} )
  EndIf( ${step} < 16 )
  set( invhfield ${tempDir}/${GreedyAtlasOutputPrefix}${GreedyAtlasOutputRootName}DefFieldImToMean.${GreedyAtlasOutputExtension} )
  Set( COPIED_INV_HFIELD ${OutSubjDir}/${i}_inv_hFieldToPopAverage.mha )
  Set( Cmd ${ResampleVolume2} ${invhfield} ${COPIED_INV_HFIELD} -i nn )
  If( ${step} < 17 )
    Run( output ${Cmd} )
    echo( ${output} )
  EndIf( ${step} < 17 )
  Inc(${count} 1)
  Int( ${count} )
endforeach( ${CASES} )
########################################################################
if( ${IS_SCALAR} != TRUE )
  include( 032TransformDTI.bms )
else( ${IS_SCALAR} != TRUE )
  include( 033Histogram.bms )
Endif( ${IS_SCALAR} != TRUE )

GetParam(SCALED_CASE ${CASES} 0)
IF( ${IS_SCALED} == TRUE )
  RegEx( IMAGE_GRID_SCALED_CASE ${IMAGE_GRID} '\*' REPLACE ${SCALED_CASE} )
  If( ${step} < 45 )
    CopyFile(${IMAGE_GRID_SCALED_CASE} ${outputDir}/ImageGrid.nrrd  )
  EndIf( ${step} < 45 )
ENDIF( ${IS_SCALED} == TRUE )

Set( ImageForMask ${tempDir}/${GreedyAtlasOutputPrefix}MeanImage.${GreedyAtlasOutputExtension} )
Set( ImageForMaskNrrd ${tempDir}/avg.nrrd )
Set( Mask ${tempDir}/mask.nrrd )

Set( Cmd ${ResampleVolume2} ${ImageForMask} ${ImageForMaskNrrd} -i nn )

Run( output ${Cmd} )
echo( ${output} )

Set( Cmd ${unu} 1op if -i ${ImageForMaskNrrd} -o ${Mask} )
If( ${step} < 46 )
  Run( output ${Cmd} )
  echo( ${output} )
EndIf( ${step} < 46 )

Set( SmoothMask ${outputDir}/Mask.nrrd )
Set( Cmd ${MedianImageFilter} ${Mask} --neighborhood 2,2,2 ${SmoothMask} )
If( ${step} < 47 )
  Run( output ${Cmd} )
  echo( ${output} )
EndIf( ${step} < 47 )
