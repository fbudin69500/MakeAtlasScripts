###Tools used###
#ImageMath
#WarpImageMultiTransform
#ResampleVolume2
#RegisterImages
#unu
#ANTS
#ITKTransformTools

set( template_mask_filtered '' )
MakeDirectory( ${tempDir} )
set( Mask_reg '' )
if( ${USE_INV_HFIELD} == FALSE && ${TEMPLATE_MASK} != '' )
  #######Mask template just in case it wasn't
  set( template_masked ${tempDir}/template_masked.nii.gz )
  set( Cmd ${ImageMath} ${Template_Image} -mask ${TEMPLATE_MASK} -type float -outfile ${template_masked} )
  echo( ${Cmd} )
  run( output ${Cmd} )
  echo( ${output} )

  set( Template_Image ${template_masked} )
endif( ${USE_INV_HFIELD} == FALSE && ${TEMPLATE_MASK} != '' )

ForEach( i ${CASES} )
  ######################Mask case image###########################
  RegEx(OutSubjDir ${OUTPUT_DIR} '\*' REPLACE ${i} )
  MakeDirectory( ${OutSubjDir} )
  if( ${ScriptName} != '' )
    GetFilename( name ${ScriptName} NAME )
    CopyFile( ${ScriptName} ${OutSubjDir}/${name} )
  Endif( ${ScriptName} != '' )
  echo( "before: "${WARP_INPUT_FILE} )
  RegEx( image ${WARP_INPUT_FILE} '\*' REPLACE ${i} )
  echo( "after: "${image} )
  if( ${USE_INV_HFIELD} == TRUE )
    RegEx( InvHFieldCase ${InvHField} '\*' REPLACE ${i} )
    #####Resample images############
    ForEach(j ${LabelMapsToWarp} )
      GetFilename( name ${j} NAME )
      set( ResampledImage ${OutSubjDir}/${i}_${name} )
      set( Cmd ${ResampleVolume2} ${j} ${ResampledImage} -i nn -R ${image} -H ${InvHFieldCase} )
      echo( ${Cmd} )
      run( output ${Cmd} )
      echo( ${output} )
    EndForEach(j ${LabelMapsToWarp} )
  else( ${USE_INV_HFIELD} == TRUE )
    #######Mask input image
    RegEx( mask ${INPUT_MASK_FILE} '\*' REPLACE ${i} )
    Set( MaskedImage ${tempDir}/${i}_MaskedImage.nii.gz )
    Set( Cmd ImageMath ${image} -mask ${mask} -outfile ${MaskedImage} -type float )
    echo( ${Cmd} )
    run( output ${Cmd} )
    echo( ${output} )

    ########Initial registration
    set( InitialTransform ${OutSubjDir}/${i}_initialTransform.txt )
    Set( Cmd ${RegisterImages} --initialization CentersOfMass --saveTransform ${InitialTransform} --registration Initial ${MaskedImage} ${Template_Image} )
    echo( ${Cmd} )
    run( output ${Cmd} )
    echo( ${output} )

    set( InitialTransformGrid ${OutSubjDir}/${i}_template_initialTransformGrid.nii.gz )
    set( Cmd ${ITKTransformTools} size ${Template_Image} ${InitialTransform} --grid ${InitialTransformGrid} )
    echo( ${Cmd} )
    run( output ${Cmd} )
    echo( ${output} )

    set( InitialTemplate ${tempDir}/${i}_initialTemplate.nii.gz )
    set( Cmd ${ResampleVolume2} -R ${InitialTransformGrid} -f ${InitialTransform} ${Template_Image} ${InitialTemplate} -i nn )
    echo( ${Cmd} )
    run( output ${Cmd} )
    echo( ${output} )


    ForEach(j ${LabelMapsToWarp} )
      GetFilename( name ${j} NAME )
      set( ResampledImage ${tempDir}/${i}_initialTransform_${name} )
      set( Cmd ${ResampleVolume2} ${j} ${ResampledImage} -i nn -R ${InitialTransformGrid} -f ${InitialTransform} )
      echo( ${Cmd} )
      run( output ${Cmd} )
      echo( ${output} )
    EndForEach(j ${LabelMapsToWarp} )
  
    #####################################################
    #######################ANTS##########################
    #####################################################
    if( ${TEMPLATE_MASK} != '' )
      set( InitialMask ${tempDir}/${i}_initialMask.nii.gz )
      set( Cmd ${ResampleVolume2} -R ${InitialTransformGrid} -f ${InitialTransform} ${TEMPLATE_MASK} ${InitialMask} -i nn )
      echo( ${Cmd} )
      run( output ${Cmd} )
      echo( ${output} )

      set( Mask_reg -m MSQ[${mask},${InitialMask},1,0] )
    endif( ${TEMPLATE_MASK} != '' )

    GetFilename( template_TAG ${Template_Image} NAME_WITHOUT_EXTENSION )
    set( NII_FILE_PREFIX ${OutSubjDir}/${template_TAG}_to_${i} )
    set( AFFINE_FILE ${NII_FILE_PREFIX}Affine.txt )
    set( WARP_FILE ${NII_FILE_PREFIX}Warp.nii.gz )
    set (bin_number 32)
    set ( AntsCmd ${ANTS} 3 ${Mask_reg} -m MI[${MaskedImage}, ${InitialTemplate}, 1, ${bin_number}] -i ${IterationNumber} -r Gauss[1,0] -t SyN[0.25] -o ${NII_FILE_PREFIX} )
    echo( ${AntsCmd} )
    run( output ${AntsCmd} )
    echo( ${output} )

   #####Warp#####################
    Set( template_WARP ${OutSubjDir}/${template_TAG}_ANTSWarp.nii.gz  )
    set( WarpCmd ${WarpImageMultiTransform} 3 ${InitialTemplate} ${template_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${MaskedImage} )
    echo( ${WarpCmd} )
    Run( output ${WarpCmd} )
    echo( ${output} )

######Merge transforms############Could only work for DTIs!!!!!!!!!!!!!!
########${InSubjDir}/${i}_dti_f_toTemplate.nhdr has to be replaced by something
#    set( affineTransform ${tempDir}/${i}_ANTSaffine.txt )
#    set( Cmd ITKTransformTools MO2Aff ${AFFINE_FILE} ${affineTransform} )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

#    set( compose ${tempDir}/${i}_affineCompose.txt )
#    set( Cmd ITKTransformTools compose ${InitialTransform} ${affineTransform} ${compose} )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

#    set( displacementAffine ${tempDir}/${i}_DisplacementAffine.nrrd )
#    set( Cmd ResampleDTIlogEuclidean ${InSubjDir}/${i}_dti_f_toTemplate.nhdr ${tempDir}/dummy.nrrd -f ${compose} -R ${image} --outputDisplacementField ${displacementAffine} --concatenationOnly )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

#    set( Concatenated ${OutSubjDir}/${i}_DisplacementField.nrrd )
#    set( Cmd TransformDeformationField --outputConcatenate ${Concatenated} --concatenate ${WARP_FILE},${displacementAffine} -R ${image} --hfieldtype displacement,displacement )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

#    set( InverseDisplacementAffine ${tempDir}/${i}_InverseDisplacementAffine.nrrd )
#    set( Cmd ResampleDTIlogEuclidean ${InSubjDir}/${i}_dti_f_toTemplate.nhdr ${tempDir}/dummy.nrrd -f ${compose} -b -R ${template} --outputDisplacementField ${InverseDisplacementAffine} --concatenationOnly )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

#    set( InverseConcatenated ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_InverseDisplacementField.nrrd )
#    set( Cmd TransformDeformationField --outputConcatenate ${InverseConcatenated} --concatenate ${InverseDisplacementAffine},${WARP_FILE} -R ${template} --hfieldtype displacement,displacement )
#    echo( ${Cmd} )
#    run( output ${Cmd} )
#    echo( ${output} )

###############################

    ForEach(j ${LabelMapsToWarp} )
      GetFilename( name ${j} NAME )
      set( initialImage ${tempDir}/${i}_initialTransform_${name} )
      set( ResampledImage ${OutSubjDir}/${i}_${name} )
      set( Cmd ${WarpImageMultiTransform} 3 ${initialImage} ${ResampledImage} ${WARP_FILE} ${AFFINE_FILE} -R ${MaskedImage} --use-NN)
      echo( ${Cmd} )
      run( output ${Cmd} )
      echo( ${output} )
    EndForEach(j ${LabelMapsToWarp} )
  endif( ${USE_INV_HFIELD} == TRUE )
EndForEach( i ${CASES} )

