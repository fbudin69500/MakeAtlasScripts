### The script uses:
#- RegisterImages
#- Double2FloatTransform
#- AtlasWerks
#- ImageMath
#- ResampleVolume2
#- BRAINSDemonWarp
#- ITKTransformTools
#########################Mask image used to compute atlas#############
MakeDirectory( ${atlasProcessDir} )
foreach( i ${CASES} )
  set (SubjDir ${dir}/${i})
  MakeDirectory( ${SubjDir}/${PROCESS_SUBDIR} )
  set( MD ${SubjDir}/${INPUT_SUB_DIR}/${i}${ATLAS_INPUT_SUFFIX} )
  set( MASK ${SubjDir}/${INPUT_SUB_DIR}/${i}${NEW_MASK_TAG}.${extension} )#we save mask in case directory
  set( maskedMD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}.${extension} )
  set( Cmd ${ImageMathDIR}ImageMath ${MD} -mask ${MASK} -outfile ${maskedMD} -type float)
  echo( ${Cmd} )
  run( output ${Cmd} )
  echo( ${output} )
endforeach( ${CASES} )
#########################affine registration###############################
##affinely register all cases once they are skullstripped
GetParam(FIXED_CASE ${CASES} 0)
set( FIXED_IMG ${atlasProcessDir}/${FIXED_CASE}${ATLAS_INPUT_MASKED_TAG}.${extension} )
set( RESCALED_FIXED_IMG ${atlasProcessDir}/${FIXED_CASE}${ATLAS_INPUT_MASKED_TAG}_hm_resc.${extension} )
include( 031AffineRegistration.bms )
set( avgImage ${atlasProcessDir}/AverageAffineImage.nrrd )
set( Cmd ${ImageMathDIR}ImageMath ${FIRST_CASE} -avg ${ALL_OTHER_CASES} -outfile ${avgImage} )
Run( output ${Cmd} )
echo( ${output} )
set(FIXED_CASE AverageAffineImage )
set( FIXED_IMG ${avgImage} )
set( RESCALED_FIXED_IMG ${atlasProcessDir}/AverageAffineImage_resc.nrrd )
include( 031AffineRegistration.bms )
####################Create atlas##############################################
MakeDirectory( ${outputDir} )
#set( atlasWerksCmd ${AtlasWerksDIR} --outputImageFilenamePrefix=${atlasProcessDir}/avg_ --outputDeformedImageFilenamePrefix=${atlasProcessDir}/deformedImage_ --outputHFieldFilenamePrefix=${atlasProcessDir}/h_ --outputHInvFieldFilenamePrefix=${atlasProcessDir}/inv_h_ --scaleLevel=4 --numberOfIterations=200 --scaleLevel=2 --numberOfIterations=50 --scaleLevel=1 --alpha=${ALPHA} --numberOfIterations=25 ${MD_CASES} ${TRANSFORM_LIST} )

set( atlasWerksCmd ${AtlasWerksDIR}AtlasWerks --outputImageFilenamePrefix=${atlasProcessDir}/avg_ --outputDeformedImageFilenamePrefix=${atlasProcessDir}/deformedImage_ --outputHFieldFilenamePrefix=${atlasProcessDir}/h_ --scaleLevel=4 --numberOfIterations=200 --scaleLevel=2 --numberOfIterations=50 --scaleLevel=1 --numberOfIterations=25 ${MD_CASES} ${TRANSFORM_LIST} )

echo (${atlasWerksCmd})
run (output ${atlasWerksCmd})
echo (${output})
###################Save H-Fields#########################################
set( count 0 )
foreach( i ${CASES} )
  set (SubjDir ${dir}/${i})
  if( ${TRANSFORM_SUFFIX} != '' )
    set( combinedTransforms -f ${dir}/${i}/${i}${TRANSFORM_SUFFIX} )
  else( ${TRANSFORM_SUFFIX} != '' )
    set( combinedTransforms '' )
  Endif( ${TRANSFORM_SUFFIX} != '' )
  If( ${count} < 10 )
    set( suffix 000${count} )
  Endif( ${count} )
  if( ${count} >= 10 AND ${count} < 100 )
    set( suffix 00${count} )
  Endif( ${count} )
  if( ${count} >= 100 AND ${count} < 1000 )
    set( suffix 0${count} )
  Endif( ${count} )
  if( ${count} >= 1000 )
    set( suffix ${count} )
  Endif( ${count} )
  set( hfield ${atlasProcessDir}/h_${suffix}.mhd )
  Set( COPIED_HFIELD ${SubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )
  Set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${hfield} ${COPIED_HFIELD} )
  Run( output ${Cmd} )
  echo( ${output} )
  Inc(${count} 1)
  Int( ${count} )
endforeach( ${CASES} )
########################################################################
if( ${IS_SCALAR} != TRUE )
  include( ${scriptDir}/032TransformDTI.bms )
  set( ImageToRegTo ${MDFile} )
  set( hmImage ${atlasProcessDir}/AverageTensor_MD_hm.${extension} )
else( ${IS_SCALAR} != TRUE )
  Set( count 0 )
  foreach( i ${CASES} )
    set (SubjDir ${dir}/${i})
#set( MASK ${SubjDir}/${PROCESS_SUBDIR}/${i}${NEW_MASK_TAG}.${extension} )
#set( TRANSFORMED_MASK ${atlasProcessDir}/${i}_transformedMask.nrrd )
#set( TRANSFORM ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_to_${FIXED_CASE}.txt )
    Set( hfield ${SubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )

#set(Cmd ${ResampleVolume2DIR}ResampleVolume2 ${MASK} ${TRANSFORMED_MASK} -H ${hfield} -f ${TRANSFORM} -i nn )
#set(Cmd ${ResampleVolume2DIR}ResampleVolume2 ${MASK} ${TRANSFORMED_MASK} -H ${hfield} -i nn )
#Run( output ${Cmd} )
#echo( ${output} )

#    Set( MD ${SubjDir}/${INPUT_SUB_DIR}/${i}${ATLAS_INPUT_SUFFIX} )
    Set( MD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}.${extension} )
    Set( TRANSFORMED_MD ${atlasProcessDir}/${i}_SS.${extension} )
#    set( ResampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${MD} ${TRANSFORMED_MD} -H ${hfield} -f ${TRANSFORM})
    set( ResampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${MD} ${TRANSFORMED_MD} -H ${hfield})
    echo( ${ResampleCmd} )
    run( output ${ResampleCmd} )
    echo( ${output} )
    Set( NSS_MD ${SubjDir}/${INPUT_SUB_DIR}/${i}${ATLAS_INPUT_SUFFIX} )
    Set( TRANSFORMED_NSS_MD ${atlasProcessDir}/${i}_NSS.${extension} )
    set( ResampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${NSS_MD} ${TRANSFORMED_NSS_MD} -H ${hfield})
    echo( ${ResampleCmd} )
    run( output ${ResampleCmd} )
    echo( ${output} )

    if( ${count} == 0 )
      Set( FIRST_MDIMAGES ${TRANSFORMED_MD} )
      Set( FIRST_NSS_MDIMAGES ${TRANSFORMED_NSS_MD} )    
#set( FIRST_MASK ${TRANSFORMED_MASK} )
    else( ${count} == 0 )
      Set( LIST_MDIMAGES ${LIST_MDIMAGES} ${TRANSFORMED_MD} )
      Set( LIST_NSS_MDIMAGES ${LIST_NSS_MDIMAGES} ${TRANSFORMED_NSS_MD} )
#set( LIST_MASK ${LIST_MASK} ${TRANSFORMED_MASK} )
    endif( ${count} == 0 )
    Inc(${count} 1)
    Int( ${count} )
  endforeach( ${CASES} )
#Set( AvMask ${atlasProcessDir}/AverageMask.${extension} )
#set(Cmd ${ImageMathDIR}ImageMath ${FIRST_MASK} -avg ${LIST_MASK} -outfile ${AvMask} -type float )
#run( output ${Cmd} )
#echo (${output})

#set( Cmd ${ImageMathDIR}ImageMath ${AvMask} -threshold .7,2 -outfile ${outputDir}/Mask.${extension} )
#run( output ${Cmd} )
#echo (${output} )

  set( AtlasSS ${outputDir}/AverageImage_SS.${extension} )
  Set( Cmd ${ImageMathDIR}ImageMath ${FIRST_MDIMAGES} -avg ${LIST_MDIMAGES} -outfile ${AtlasSS} -type float )
  Run( output ${Cmd} )
  echo( ${output} )

  set( AtlasNSS ${outputDir}/AverageImage_NSS.${extension} )
  Set( Cmd ${ImageMathDIR}ImageMath ${FIRST_NSS_MDIMAGES} -avg ${LIST_NSS_MDIMAGES} -outfile ${AtlasNSS} -type float )
  Run( output ${Cmd} )
  echo( ${output} )

  set( ImageToRegTo ${outputDir}/AverageImage_SS.${extension} )
  set( hmImage ${atlasProcessDir}/AverageImage_hm.${extension} )
#  Set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${atlasProcessDir}/avg_2.mhd ${ImageToRegTo} )
#  echo( ${Cmd} )
#  run( output ${Cmd} )
#  echo( ${output} )
Endif( ${IS_SCALAR} != TRUE )
############Register atlas with new MD/atlas image#######################
#set( ImageToRegTo ${outputDir}/AverageImageMasked.${extension} )
set( TemplateFile ${ATLAS_DIR}/${TEMPLATE} )
set( PARCELLATIONFile ${ATLAS_DIR}/${PARCELLATION_FILE_NAME} )
IF( ${IS_SCALED} == TRUE )
  set( Cmd ${ITKTransformToolsDIR}ITKTransformTools scale ${IMAGE_GRID} ${TemplateFile} ${atlasProcessDir}/ImageGrid.nrrd ${atlasProcessDir}/AtlasGrid.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${TemplateFile} -R ${atlasProcessDir}/AtlasGrid.nrrd ${atlasProcessDir}/TemplateResampled.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMathDIR}ImageMath ${atlasProcessDir}/TemplateResampled.nrrd -changeSp 1,1,1 -outfile ${atlasProcessDir}/TemplateResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( TemplateFile ${atlasProcessDir}/TemplateResampled.nrrd )
  set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${PARCELLATIONFile} -R ${atlasProcessDir}/AtlasGrid.nrrd ${atlasProcessDir}/AtlasResampled.nrrd -i nn )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMathDIR}ImageMath ${atlasProcessDir}/AtlasResampled.nrrd -changeSp 1,1,1 -outfile ${atlasProcessDir}/AtlasResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( PARCELLATIONFile ${atlasProcessDir}/AtlasResampled.nrrd )
ENDIF( ${IS_SCALED} == TRUE )
#####matchHistogram##########################
#set( Cmd ${ImageMathDIR}ImageMath ${ImageToRegTo} -matchHistogram ${TemplateFile} -outfile ${hmImage} -type float)
#echo( ${Cmd} )
#run( output ${Cmd} )
#echo( ${output} )
#####Affine registration atlas with new MD/atlas image###########
set( TRANSFORM ${atlasProcessDir}/OldtoNewMDAtlas.txt )
set( REGIMG ${atlasProcessDir}/OldtoNewMDAtlas.${extension} )
#set( RegCmd ${RegisterImagesDIR}RegisterImages --initialization CentersOfMass --registration PipelineAffine --metric MattesMI ${hmImage} ${TemplateFile} --saveTransform ${TRANSFORM} --resampledImage ${REGIMG} )
set( RegCmd ${RegisterImagesDIR}RegisterImages --initialization CentersOfMass --registration PipelineAffine --metric MattesMI ${ImageToRegTo} ${TemplateFile} --saveTransform ${TRANSFORM} --resampledImage ${REGIMG} )
echo( ${RegCmd} )
run( output ${RegCmd} )
echo( ${output} )
#####Warp#####################
Set( DeformationField ${atlasProcessDir}/displacementFieldOldAtlas.nrrd )
Set( WarpCmd ${BRAINSDemonWarpDIR}BRAINSDemonWarp -f ${ImageToRegTo} -m ${TemplateFile} -O ${DeformationField} --initializeWithTransform ${TRANSFORM} -e --numberOfMatchPoints 50 --numberOfHistogramBins 1024 --minimumMovingPyramid 4,4,4 --minimumFixedPyramid 4,4,4 -n 3 -i 100,50,40 --upperThresholdForBOBF 3000 --registrationFilterType SymmetricLogDemons )
#Set( WarpCmd ${BRAINSDemonWarpDIR}BRAINSDemonWarp -f ${ImageToRegTo} -m ${TemplateFile} -O ${DeformationField} --initializeWithTransform ${TRANSFORM} -e --numberOfMatchPoints 50 --numberOfHistogramBins 1024 --registrationFilterType LogDemons )
Run( output ${WarpCmd} )
echo( ${output} )
#####Resample atlas (parcellation)############
set( resampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${PARCELLATIONFile} ${outputDir}/${PARCELLATION_FILE_TAG}.${extension} -H ${DeformationField} -i nn -R ${ImageToRegTo} --hfieldtype displacement )
echo( ${resampleCmd} )
run( output ${resampleCmd} )
echo( ${output} )
