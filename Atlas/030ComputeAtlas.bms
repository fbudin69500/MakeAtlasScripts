### The script uses:
#- RegisterImages
#- Double2FloatTransform
#- AtlasWerks
#- ImageMath
#- ResampleVolume2
#- BRAINSDemonWarp
#- ITKTransformTools
#########################Mask image used to compute atlas#############
MakeDirectory( ${atlasProcessDir} )
foreach( i ${CASES} )
  set (OutSubjDir ${dir}/${OUTPUT_PRE_SUBDIR}/${i})
  set (InSubjDir ${dir}/${INPUT_PRE_SUBDIR}/${i}/${INPUT_POST_SUBDIR} )
  MakeDirectory( ${OutSubjDir}/${PROCESS_SUBDIR} )
  ##Save config file in each sub dir of each case
  if( ${ScriptName} != '' )
    GetFilename( name ${ScriptName} NAME )
    CopyFile( ${ScriptName} ${OutSubjDir}/${PROCESS_SUBDIR}/${name} )
  Endif( ${ScriptName} != '' )
  set( MD ${InSubjDir}/${i}${ATLAS_INPUT_SUFFIX} )
  set( MASK ${InSubjDir}/${i}${NEW_MASK_TAG}.${extension} )#we save mask in case directory
  set( maskedMD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}.${extension} )
  set( Cmd ${ImageMathDIR}ImageMath ${MD} -mask ${MASK} -outfile ${maskedMD} -type float)
  echo( ${Cmd} )
  run( output ${Cmd} )
  echo( ${output} )
  if( ${Mradius} != 0 )
    set( MedianMD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_median.nrrd )  
    set( Cmd ${MedianImageFilterDIR}MedianImageFilter --neighborhood ${Mradius},${Mradius},${Mradius} ${maskedMD} ${MedianMD} )
    echo( ${Cmd} )
    run( output ${Cmd} )
    echo( ${output} )
  else( ${Mradius} != 0 )
    set( MedianMD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_padded.${extension} )
  endif( ${Mradius} != 0 )
  set( paddedMD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_padded.${extension} )
  set( Cmd ${unuDIR}unu pad -i ${MedianMD} -o ${paddedMD} -min -10 -10 -10 -max M+10 M+10 M+10 -b pad )
  echo( ${Cmd} )
  run( output ${Cmd} )
  echo( ${output} )
 endforeach( ${CASES} )

set( ATLAS_INPUT_MASKED_TAG ${ATLAS_INPUT_MASKED_TAG}_padded )
#########################affine registration###############################
##affinely register all cases once they are skullstripped
GetParam(FIXED_CASE ${CASES} 0)
set( FIXED_IMG ${atlasProcessDir}/${FIXED_CASE}${ATLAS_INPUT_MASKED_TAG}.${extension} )
set( RESCALED_FIXED_IMG ${atlasProcessDir}/${FIXED_CASE}${ATLAS_INPUT_MASKED_TAG}_hm_resc.${extension} )
include( 031AffineRegistration.bms )
set( avgImage ${atlasProcessDir}/AverageAffineImage.nrrd )
set( Cmd ${ImageMathDIR}ImageMath ${FIRST_CASE} -avg ${ALL_OTHER_CASES} -outfile ${avgImage} )
Run( output ${Cmd} )
echo( ${output} )
set(FIXED_CASE AverageAffineImage )
set( FIXED_IMG ${avgImage} )
set( RESCALED_FIXED_IMG ${atlasProcessDir}/AverageAffineImage_resc.nrrd )
include( 031AffineRegistration.bms )
####################Create atlas##############################################
MakeDirectory( ${outputDir} )
##Saves config file in atlas dir
if( ${ScriptName} != '' )
  ExitOnError( 'TRUE' )
  GetFilename( name ${ScriptName} NAME )
  CopyFile( ${ScriptName} ${outputDir}/${name} )
  ExitOnError( 'FALSE' )
Endif( ${ScriptName} != '' )
set( atlasWerksCmd ${AtlasWerksDIR}AtlasWerks --outputImageFilenamePrefix=${atlasProcessDir}/avg_ --outputDeformedImageFilenamePrefix=${atlasProcessDir}/deformedImage_ --outputHFieldFilenamePrefix=${atlasProcessDir}/h_ --outputHInvFieldFilenamePrefix=${atlasProcessDir}/inv_h_ --scaleLevel=4 --numberOfIterations=200 --scaleLevel=2 --numberOfIterations=50 --scaleLevel=1 --numberOfIterations=25 ${MD_CASES} ${TRANSFORM_LIST} )

echo (${atlasWerksCmd})
run (output ${atlasWerksCmd})
echo (${output})
###################Save H-Fields#########################################
set( count 0 )
foreach( i ${CASES} )
  set (OutSubjDir ${dir}/${OUTPUT_PRE_SUBDIR}/${i})
  if( ${TRANSFORM_SUFFIX} != '' )
    set( combinedTransforms -f ${dir}/${INPUT_PRE_SUBDIR}/${i}/${INPUT_POST_SUBDIR}/${i}${TRANSFORM_SUFFIX} )
  else( ${TRANSFORM_SUFFIX} != '' )
    set( combinedTransforms '' )
  Endif( ${TRANSFORM_SUFFIX} != '' )
  If( ${count} < 10 )
    set( suffix 000${count} )
  Endif( ${count} )
  if( ${count} >= 10 AND ${count} < 100 )
    set( suffix 00${count} )
  Endif( ${count} )
  if( ${count} >= 100 AND ${count} < 1000 )
    set( suffix 0${count} )
  Endif( ${count} )
  if( ${count} >= 1000 )
    set( suffix ${count} )
  Endif( ${count} )
  set( hfield ${atlasProcessDir}/h_${suffix}.mhd )
  Set( COPIED_HFIELD ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )
  Set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${hfield} ${COPIED_HFIELD} )
  Run( output ${Cmd} )
  echo( ${output} )

  set( invhfield ${atlasProcessDir}/inv_h_${suffix}.mhd )
  Set( COPIED_INV_HFIELD ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_inv_hFieldToAtlas.mha )
  Set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${invhfield} ${COPIED_INV_HFIELD} )
  Run( output ${Cmd} )
  echo( ${output} )

  Inc(${count} 1)
  Int( ${count} )
endforeach( ${CASES} )
########################################################################
if( ${IS_SCALAR} != TRUE )
  include( 032TransformDTI.bms )
  set( ImageToRegTo ${MDFile} )
  set( hmImage ${atlasProcessDir}/AverageTensor_MD_hm.${extension} )
else( ${IS_SCALAR} != TRUE )
  include( 033Histogram.bms )
  set( ImageToRegTo ${outputDir}/AverageImage_SS.${extension} )
  set( hmImage ${atlasProcessDir}/AverageImage_hm.${extension} )
Endif( ${IS_SCALAR} != TRUE )
############Register atlas with new MD/atlas image#######################
set( TemplateFile ${ATLAS_DIR}/${TEMPLATE} )
set( PARCELLATIONFile ${ATLAS_DIR}/${PARCELLATION_FILE_NAME} )
IF( ${IS_SCALED} == TRUE )
  set( Cmd ${ITKTransformToolsDIR}ITKTransformTools scale ${dir}/${INPUT_PRE_SUBDIR}/${i}/${INPUT_POST_SUBDIR}/${IMAGE_GRID} ${TemplateFile} ${atlasProcessDir}/ImageGrid.nrrd ${atlasProcessDir}/AtlasGrid.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${TemplateFile} -R ${atlasProcessDir}/AtlasGrid.nrrd ${atlasProcessDir}/TemplateResampled.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMathDIR}ImageMath ${atlasProcessDir}/TemplateResampled.nrrd -changeSp 1,1,1 -outfile ${atlasProcessDir}/TemplateResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( TemplateFile ${atlasProcessDir}/TemplateResampled.nrrd )
  set( Cmd ${ResampleVolume2DIR}ResampleVolume2 ${PARCELLATIONFile} -R ${atlasProcessDir}/AtlasGrid.nrrd ${atlasProcessDir}/AtlasResampled.nrrd -i nn )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMathDIR}ImageMath ${atlasProcessDir}/AtlasResampled.nrrd -changeSp 1,1,1 -outfile ${atlasProcessDir}/AtlasResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( PARCELLATIONFile ${atlasProcessDir}/AtlasResampled.nrrd )
ENDIF( ${IS_SCALED} == TRUE )
#####matchHistogram##########################
#set( Cmd ${ImageMathDIR}ImageMath ${ImageToRegTo} -matchHistogram ${TemplateFile} -outfile ${hmImage} -type float)
#echo( ${Cmd} )
#run( output ${Cmd} )
#echo( ${output} )


IF(${BSpline} == FALSE )
  #####Affine registration atlas with new MD/atlas image###########
  set( TRANSFORM ${atlasProcessDir}/OldtoNewMDAtlas.txt )
  set( REGIMG ${atlasProcessDir}/OldtoNewMDAtlas.${extension} )
  #set( RegCmd ${RegisterImagesDIR}RegisterImages --initialization CentersOfMass --registration PipelineAffine --metric MattesMI ${hmImage} ${TemplateFile} --saveTransform ${TRANSFORM} --resampledImage ${REGIMG} )
  set( RegCmd ${RegisterImagesDIR}RegisterImages --initialization CentersOfMass --registration PipelineAffine --metric MattesMI ${ImageToRegTo} ${TemplateFile} --saveTransform ${TRANSFORM} --resampledImage ${REGIMG} )
  echo( ${RegCmd} )
  run( output ${RegCmd} )
  echo( ${output} )
  #####Warp#####################
  Set( DeformationField ${atlasProcessDir}/displacementFieldOldAtlas.nrrd )
  Set( WarpCmd ${BRAINSDemonWarpDIR}BRAINSDemonWarp -f ${ImageToRegTo} -m ${TemplateFile} -O ${DeformationField} --initializeWithTransform ${TRANSFORM} -e --numberOfMatchPoints 50 --numberOfHistogramBins 1024 --minimumMovingPyramid 4,4,4 --minimumFixedPyramid 4,4,4 -n 3 -i 100,50,40 --upperThresholdForBOBF 3000 --registrationFilterType SymmetricLogDemons )
  Run( output ${WarpCmd} )
  echo( ${output} )
  #####Resample atlas (parcellation)############
  set( resampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${PARCELLATIONFile} ${outputDir}/${PARCELLATION_FILE_TAG}.${extension} -H ${DeformationField} -i nn -R ${ImageToRegTo} --hfieldtype displacement )
  echo( ${resampleCmd} )
  run( output ${resampleCmd} )
  echo( ${output} )

ELSE(${BSpline} == FALSE)
   #####B-Spline registration atlas with new MD/atlas image###########
    set( TRANSFORM ${atlasProcessDir}/OldtoNewMDAtlas.txt )
    set( REGIMG ${atlasProcessDir}/OldtoNewMDAtlas.${extension} )
    set( RegCmd ${RegisterImagesDIR}RegisterImages --initialization CentersOfMass --registration PipelineBSpline --metric MattesMI ${ImageToRegTo} ${TemplateFile} --saveTransform ${TRANSFORM} --resampledImage ${REGIMG} --rigidSamplingRatio 0.1 --affineSamplingRatio 0.1 --bsplineMaxIterations 40 --bsplineSamplingRatio 0.3 --controlPointSpacing 30 )
    echo( ${RegCmd} )
    run( output ${RegCmd} )
    echo( ${output} )
  #####Resample atlas (parcellation)############
    set( resampleCmd ${ResampleVolume2DIR}ResampleVolume2 ${PARCELLATIONFile} ${outputDir}/${PARCELLATION_FILE_TAG}.${extension} -i nn -R ${ImageToRegTo} -f ${TRANSFORM})
    echo( ${resampleCmd} )
    run( output ${resampleCmd} )
    echo( ${output} ) 
ENDIF(${BSpline} == FALSE)
