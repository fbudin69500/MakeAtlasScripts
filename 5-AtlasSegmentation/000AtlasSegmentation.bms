### The script uses:
#- RegisterImages
#- Double2FloatTransform
#- AtlasWerks
#- ImageMath
#- ResampleVolume2
#- BRAINSDemonWarp
#- ITKTransformTools
#- unu
#- ANTs
############Register atlas with new MD/atlas image#######################
#Variables initialization
RegEx( PARCELLATION_FILE_TAG ${PARCELLATION_FILE_NAME} '\..*' REPLACE '' )
RegEx( TEMPLATE_TAG ${TEMPLATE} '\..*' REPLACE '' )
RegEx( PopulationAtlas_TAG ${PopulationAtlas} '\..*' REPLACE '' )
MakeDirectory( ${atlasProcessDir} )

set( ImageToRegTo ${PopAtlasDir}/${PopulationAtlas} )
set( temp ${atlasProcessDir} )
set( TemplateFile ${ATLAS_DIR}/${TEMPLATE} )

############Smoothes population atlas#######################
set ( TemplateFile_SMOOTH ${TemplateFile}  )

If(${Smooth} == TRUE)

  set ( TemplateFile_SMOOTH ${atlasProcessDir}/${TEMPLATE_TAG}_Smooth.nrrd )
  set ( IMCmd ${ImageMath} ${TemplateFile} -outfile ${TemplateFile_SMOOTH} -smooth -gauss -type float )

  echo( ${IMCmd} )
  if (${step} < 1)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 1)

EndIf(${Smooth} == TRUE)

set( PARCELLATIONFile ${ATLAS_DIR}/${PARCELLATION_FILE_NAME} )
IF( ${IS_SCALED} == TRUE )
  set( Cmd ${ITKTransformTools} scale ${PopAtlasDir}/${IMAGE_GRID} ${TemplateFile} ${temp}/ImageGrid.nrrd ${temp}/AtlasGrid.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  set( Cmd ${ResampleVolume2} ${TemplateFile_SMOOTH} -R ${temp}/AtlasGrid.nrrd ${temp}/TemplateResampled.nrrd )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMath} ${temp}/TemplateResampled.nrrd -changeSp 1,1,1 -outfile ${temp}/TemplateResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( TemplateFile ${temp}/TemplateResampled.nrrd )
  set( Cmd ${ResampleVolume2} ${PARCELLATIONFile} -R ${temp}/AtlasGrid.nrrd ${temp}/AtlasResampled.nrrd -i nn )
  run( output ${Cmd} )
  echo( ${output} )
  Set( Cmd ${ImageMath} ${temp}/AtlasResampled.nrrd -changeSp 1,1,1 -outfile ${temp}/AtlasResampled.nrrd -type float )
  run( output ${Cmd} )
  echo( ${output} )
  set( PARCELLATIONFile ${temp}/AtlasResampled.nrrd )
ENDIF( ${IS_SCALED} == TRUE )


  #####Affine registration atlas with new MD/atlas image###########
set( REGIMG ${temp}/OldtoNewMDAtlas.nrrd )

  #####Uses RI for an initialization and saves transform#####################
set( TRANSFORM ${temp}/Init_transform.txt )
set( RegCmd ${RegisterImages} --initialization CentersOfMass ${ImageToRegTo} ${TemplateFile_SMOOTH} --saveTransform ${TRANSFORM})

  echo( ${RegCmd} )
  if (${step} < 2)
    run( output ${RegCmd} )
    echo( ${output} )
  endif (${step} < 2)

  #####ITKTransformTools#####################
  set ( Grid ${temp}/Grid.nrrd )
  set ( ITKTTCmd ${ITKTransformTools} size ${TemplateFile_SMOOTH} ${TRANSFORM} --grid ${Grid} )

  echo( ${ITKTTCmd} )
  if (${step} < 3)
    run( output ${ITKTTCmd} )
    echo( ${output} )
  endif (${step} < 3)

  #####ResampleVolume2#####################
  set ( TEMPLATE_RV2 ${temp}/${TEMPLATE_TAG}_RV2.nrrd ) 
  set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${TemplateFile_SMOOTH} ${TEMPLATE_RV2})

  echo( ${RV2Cmd} )
  if (${step} < 4)
    run( output ${RV2Cmd} )
    echo( ${output} )
  endif (${step} < 4)


  set ( PARCELLATION_FILE ${ATLAS_DIR}/${PARCELLATION_FILE_NAME} )
  set ( PARCELLATION_FILE_RV2 ${temp}/${PARCELLATION_FILE_TAG}_RV2.nrrd )
  set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${PARCELLATION_FILE} ${PARCELLATION_FILE_RV2})

  echo( ${RV2Cmd} )
  if (${step} < 5)
    run( output ${RV2Cmd} )
    echo( ${output} )
  endif (${step} < 5)

  set( WARP_FILE ${atlasProcessDir}/${PopulationAtlas_TAG}_to_${TEMPLATE_TAG}_RV2Warp.nii.gz )
  set( NII_FILE_PREFIX ${atlasProcessDir}/${PopulationAtlas_TAG}_to_${TEMPLATE_TAG}_RV2 )
  set( AFFINE_FILE ${atlasProcessDir}/${PopulationAtlas_TAG}_to_${TEMPLATE_TAG}_RV2Affine.txt )

IF(${Diffeomorphic} == FALSE )
#Diffeomorphic

  IF(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )
    #####ANTS#####################
    set ( TEMPLATE_mask_IM ${ATLAS_DIR}/${TEMPLATE_TAG}_IM.nrrd )
    set ( PopAtlas_mask_IM ${ATLAS_DIR}/${PopulationAtlas_TAG}_IM.nrrd )
    set ( IMCmd ${ImageMath} ${TEMPLATE_mask} -outfile ${TEMPLATE_mask_IM} -threshold 0.5,42000)
  echo( ${IMCmd} )

  if (${step} < 6)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 6)
    set ( IMCmd ${ImageMath} ${PopAtlas_mask} -outfile ${PopAtlas_mask_IM} -threshold 0.5,42000)
  echo( ${IMCmd} )

  if (${step} < 6)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 6)

    set ( AntsCmd ${ANTS} ${imgDimension} -m MI[${ImageToRegTo}, ${TEMPLATE_RV2}, ${weight}, ${bin_number}] -m MSQ[${PopAtlas_mask}, ${TEMPLATE_mask}, ${weight}, 0] -r Gauss[3,0] -i 30x20x10 -o ${NII_FILE_PREFIX} -t Elast[1.5] )

  ELSE(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )

    set ( AntsCmd ${ANTS} ${imgDimension} -m MI[${ImageToRegTo}, ${TEMPLATE_RV2}, ${weight}, ${bin_number}] -r Gauss[3,0] -i 30x20x10 -o ${NII_FILE_PREFIX} -t Elast[1.5] )

  ENDIF(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )

  echo( ${AntsCmd} )
  if (${step} < 6)
    run( output ${AntsCmd} )
    echo( ${output} )
  endif (${step} < 6)

ELSE(${Diffeomorphic} == FALSE) 
#Elastic
  IF(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )
  #####ANTS#####################
set ( AntsCmd ${ANTS} ${imgDimension} -m MI[${ImageToRegTo}, ${TEMPLATE_RV2}, ${weight}, ${bin_number}]  -m MSQ[${PopAtlas_mask}, ${TEMPLATE_mask}, ${weight}, 0] -r Gauss[3,0] -i 30x20x10 -o ${NII_FILE_PREFIX} -t Elast[1.5] )

  ELSE(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )

  set ( AntsCmd ${ANTS} ${imgDimension} -m MI[${ImageToRegTo}, ${TEMPLATE_RV2}, ${weight}, ${bin_number}] -r Gauss[3,0] -i 30x20x10 -o ${NII_FILE_PREFIX} -t Elast[1.5] )

  ENDIF(${TEMPLATE_mask} != '' && ${PopAtlas_mask} != '' )

  echo( ${AntsCmd} )
  if (${step} < 6)
    run( output ${AntsCmd} )
    echo( ${output} )
  endif (${step} < 6)

ENDIF(${Diffeomorphic} == FALSE)

   #####Warp#####################
  Set( DeformationField ${temp}/displacementFieldOldAtlas.nrrd )
  Set( TEMPLATE_RV2_WARP ${temp}/${TEMPLATE_TAG}_RV2_Warp.nrrd  )
  set( WarpCmd ${WarpImageMultiTransform} ${imgDimension} ${TEMPLATE_RV2} ${TEMPLATE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} )

  echo( ${WarpCmd} )
  if (${step} < 7)
    Run( output ${WarpCmd} )
    echo( ${output} )
  endif (${step} < 7)

  #####Warp atlas (parcellation)############
  set ( PARCELLATION_FILE_RV2_WARP ${temp}/${PARCELLATION_FILE_TAG}_RV2_Warp.nrrd )
  set( WarpCmd ${WarpImageMultiTransform} ${imgDimension} ${PARCELLATION_FILE_RV2} ${PARCELLATION_FILE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} --use-NN)

  echo( ${WarpCmd} )
  if (${step} < 8)
    run( output ${WarpCmd} )
    echo( ${output} )
  endif (${step} < 8)
