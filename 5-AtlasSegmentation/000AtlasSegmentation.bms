### The script uses:
#- RegisterImages
#- ImageMath
#- ResampleVolume2
#- ITKTransformTools
#- unu
#- ANTS
############Register atlas with new MD/atlas image#######################
#Variables initialization
RegEx( TEMPLATE_SEGMENTATION_TAG ${TEMPLATE_SEGMENTATION} '\..*' REPLACE '' )
RegEx( TEMPLATE_TAG ${TEMPLATE} '\..*' REPLACE '' )
RegEx( PopulationAverage_TAG ${PopulationAverage} '\..*' REPLACE '' )
set( temp ${tempDir} )
MakeDirectory( ${temp} )

set( ImageToRegTo ${PopAverageDir}/${PopulationAverage} )
set( PopAverage_mask ${PopAverageDir}/${PopAverage_mask_FILENAME} )

set( TemplateFile ${TEMPLATE_DIR}/${TEMPLATE} )
set( TEMPLATE_mask ${TEMPLATE_DIR}/${TEMPLATE_mask_FILENAME} )
set( SEGMENTATIONFile ${TEMPLATE_DIR}/${TEMPLATE_SEGMENTATION} )
############Smoothes population average#######################
If(${Smooth} == TRUE)
  set ( TemplateFile_SMOOTH ${temp}/${TEMPLATE_TAG}_Smooth.nrrd )
  set ( IMCmd ${ImageMath} ${TemplateFile} -outfile ${TemplateFile_SMOOTH} -smooth -gauss -type float )
  echo( ${IMCmd} )
  if(${step} < 1)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 1)
  set( TemplateFile ${TemplateFile_SMOOTH} )
EndIf(${Smooth} == TRUE)


IF( ${IS_SCALED} == TRUE )
  set( Cmd ${ITKTransformTools} scale ${PopAverageDir}/${IMAGE_GRID} ${TemplateFile} ${temp}/ImageGrid.nrrd ${temp}/AverageGrid.nrrd )
  echo( ${Cmd} )
  if(${step} < 2)
    run( output ${Cmd} )
    echo( ${output} )
  endif (${step} < 2)
  set( template_upscaled ${temp}/Template_upscaled.nrrd )
  set( Cmd ${ResampleVolume2} ${TemplateFile} -R ${temp}/AverageGrid.nrrd ${template_upscaled} )
  echo( ${Cmd} )
  if(${step} < 3)
    run( output ${Cmd} )
    echo( ${output} )
  endif (${step} < 3)
  Set( Cmd ${ImageMath} ${template_upscaled} -changeSp 1,1,1 -outfile ${template_upscaled} -type float )
  echo( ${Cmd} )
  if(${step} < 4)
    run( output ${Cmd} )
    echo( ${output} )
  endif(${step} < 4)
  set( TemplateFile ${template_upscaled} )
  set( SEGMENTATIONFile_upscaled ${temp}/Segmentation_upscaled.nrrd )
  set( Cmd ${ResampleVolume2} ${SEGMENTATIONFile} -R ${temp}/AverageGrid.nrrd ${SEGMENTATIONFile_upscaled} -i nn )
  echo( ${Cmd} )
  if(${step} < 5)
    run( output ${Cmd} )
    echo( ${output} )
  endif(${step} < 5)
  Set( Cmd ${ImageMath} ${SEGMENTATIONFile_upscaled} -changeSp 1,1,1 -outfile ${SEGMENTATIONFile_upscaled} )
  echo( ${Cmd} )
  if(${step} < 6)
    run( output ${Cmd} )
    echo( ${output} )
  endif(${step} < 6)
  set( SEGMENTATIONFile ${SEGMENTATIONFile_upscaled} )
  IF(${TEMPLATE_mask_FILENAME} != '' )
    set ( TEMPLATE_mask_upscaled ${temp}/template_mask_upscaled.nrrd )
    set( Cmd ${ResampleVolume2} ${TEMPLATE_mask} -R ${temp}/AverageGrid.nrrd ${TEMPLATE_mask_upscaled} -i nn )
    echo( ${Cmd} )
    if(${step} < 7)
      run( output ${Cmd} )
      echo( ${output} )
    endif(${step} < 7)
    Set( Cmd ${ImageMath} ${TEMPLATE_mask_upscaled} -changeSp 1,1,1 -outfile ${TEMPLATE_mask_upscaled} )
    echo( ${Cmd} )
    if(${step} < 8)
      run( output ${Cmd} )
      echo( ${output} )
    endif(${step} < 8)
    set( TEMPLATE_mask ${TEMPLATE_mask_upscaled} )
  ENDIF(${TEMPLATE_mask_FILENAME} != '' )
ENDIF( ${IS_SCALED} == TRUE )


#####Uses RI for an initialization and saves transform#####################
set( TRANSFORM ${temp}/Init_transform.txt )
set( RegCmd ${RegisterImages} --initialization CentersOfMass ${ImageToRegTo} ${TemplateFile} --saveTransform ${TRANSFORM})

echo( ${RegCmd} )
if (${step} < 9)
  run( output ${RegCmd} )
  echo( ${output} )
endif (${step} < 9)

#####ITKTransformTools#####################
set ( Grid ${temp}/Grid.nrrd )
set ( ITKTTCmd ${ITKTransformTools} size ${TemplateFile} ${TRANSFORM} --grid ${Grid} )

echo( ${ITKTTCmd} )
if (${step} < 10)
  run( output ${ITKTTCmd} )
  echo( ${output} )
endif (${step} < 10)

#####ResampleVolume2#####################
set ( TEMPLATE_RV2 ${temp}/${TEMPLATE_TAG}_initialized.nrrd ) 
set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${TemplateFile} ${TEMPLATE_RV2})

echo( ${RV2Cmd} )
if (${step} < 11)
  run( output ${RV2Cmd} )
  echo( ${output} )
endif (${step} < 11)


set ( SEGMENTATION_FILE ${TEMPLATE_DIR}/${TEMPLATE_SEGMENTATION} )
set ( SEGMENTATION_FILE_RV2 ${temp}/${SEGMENTATION_FILE_TAG}_initialized.nrrd )
set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${SEGMENTATION_FILE} ${SEGMENTATION_FILE_RV2})

echo( ${RV2Cmd} )
if (${step} < 12)
  run( output ${RV2Cmd} )
  echo( ${output} )
endif (${step} < 12)


IF(${TEMPLATE_mask_FILENAME} != '' )
  set ( TEMPLATE_MASK_FILE_RV2 ${temp}/${TEMPLATE_TAG}_mask_initialized.nrrd )
  set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${TEMPLATE_mask} ${TEMPLATE_MASK_FILE_RV2})
  echo( ${RV2Cmd} )
  if (${step} < 13)
    run( output ${RV2Cmd} )
    echo( ${output} )
  endif (${step} < 13)
ENDIF(${TEMPLATE_mask_FILENAME} != '' )


set( NII_FILE_PREFIX ${temp}/${PopulationAverage_TAG}_to_${TEMPLATE_TAG}_ANTS )
set( WARP_FILE ${NII_FILE_PREFIX}Warp.nii.gz )
set( AFFINE_FILE ${NII_FILE_PREFIX}Affine.txt )


IF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
  #####ANTS#####################
  set ( TEMPLATE_mask_IM ${temp}/${TEMPLATE_TAG}_mask_IM.nrrd )
  set ( PopAverage_mask_IM ${temp}/${PopulationAverage_TAG}_mask_IM.nrrd )
  set ( IMCmd ${ImageMath} ${TEMPLATE_MASK_FILE_RV2} -outfile ${TEMPLATE_mask_IM} -threshold 0.5,42000)

  echo( ${IMCmd} )
  if (${step} < 14)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 14)

  set ( IMCmd ${ImageMath} ${PopAverage_mask} -outfile ${PopAverage_mask_IM} -threshold 0.5,42000)
  echo( ${IMCmd} )
  if (${step} < 15)
    run( output ${IMCmd} )
    echo( ${output} )
  endif (${step} < 15)

  set( PopAverage_mask ${PopAverage_mask_IM} )
  set( TEMPLATE_MASK_FILE_RV2 ${TEMPLATE_mask_IM} )
ENDIF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )

IF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
  set( mask_add_Cmd -m MSQ[${PopAverage_mask}, ${TEMPLATE_MASK_FILE_RV2}, 1, 0] )
ELSE(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
  set( mask_add_Cmd '' )
ENDIF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )


IF(${Diffeomorphic} == TRUE )
  ####Diffeomorphic
  set( diff_Elast_Cmd -r Gauss[1,0] -t SyN[0.25] -i 30x35x40 )
ELSE(${Diffeomorphic} == TRUE) 
  ####Elastic
  set( diff_Elast_Cmd -r Gauss[3,0] -i 30x20x10 -t Elast[1.5] )
ENDIF(${Diffeomorphic} == TRUE)

set ( AntsCmd ${ANTS} 3 -m MI[${ImageToRegTo}, ${TEMPLATE_RV2}, 1, ${bin_number}] ${mask_add_Cmd} ${diff_Elast_Cmd} -o ${NII_FILE_PREFIX} )
echo( ${AntsCmd} )
if (${step} < 16)
  run( output ${AntsCmd} )
  echo( ${output} )
endif (${step} < 16)



#####Warp#####################
set( TEMPLATE_RV2_WARP ${temp}/${TEMPLATE_TAG}_ANTS_Warp.nrrd  )
set( WarpCmd ${WarpImageMultiTransform} 3 ${TEMPLATE_RV2} ${TEMPLATE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} )

echo( ${WarpCmd} )
if (${step} < 17)
  Run( output ${WarpCmd} )
  echo( ${output} )
endif (${step} < 17)

#####Warp segmentation############
set ( SEGMENTATION_FILE_RV2_WARP ${PopAverageDir}/${SEGMENTATION_FILE_TAG}.nrrd )
set( WarpCmd ${WarpImageMultiTransform} 3 ${SEGMENTATION_FILE_RV2} ${SEGMENTATION_FILE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} --use-NN)

echo( ${WarpCmd} )
if (${step} < 18)
  run( output ${WarpCmd} )
  echo( ${output} )
endif (${step} < 18)
