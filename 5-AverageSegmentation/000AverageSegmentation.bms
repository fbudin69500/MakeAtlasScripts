### The script uses:
#- RegisterImages
#- ImageMath
#- ResampleVolume2
#- ITKTransformTools
#- unu
#- ANTS
############Register average with new MD/average image#######################


GetListSize( sizeTEMPLATE ${TEMPLATE} )
GetListSize( sizePopulationAverage ${PopulationAverage} )
GetListSize( sizeMeasure ${Measure} )
GetListSize( sizebin ${bin_number} )
if( ${sizeTEMPLATE} != ${sizePopulationAverage} || ${sizeMeasure} != ${sizeTEMPLATE} || ${sizebin} != ${sizeTEMPLATE} )
  echo( 'TEMPLATE, PopulationAverage, Measure and bin_number must have the same number of elements' )
  exit()
endif()

GetListSize( sizeTEMPLATE_mask_FILENAME ${TEMPLATE_mask_FILENAME} )
GetListSize( sizePopAverage_mask_FILENAME ${PopAverage_mask_FILENAME} )
if( ${sizeTEMPLATE_mask_FILENAME} != ${sizePopAverage_mask_FILENAME} )
  echo( 'TEMPLATE_mask_FILENAME and PopAverage_mask_FILENAME must have the same number of elements' )
  exit()
endif()

#Variables initialization
set( temp ${tempDir} )
MakeDirectory( ${temp} )
MakeDirectory( ${OutputDir} )

if( ${ScriptName} != '' )
  GetFilename( name ${ScriptName} NAME )
  CopyFile( ${ScriptName} ${OutputDir}/${name} )
Endif( ${ScriptName} != '' )

GetParam( ImageToRegTo ${PopulationAverage} 0 )
GetParam( TEMPLATE_FIRST ${TEMPLATE} 0 )
GetFileName( TEMPLATE_FIRST_TAG ${TEMPLATE_FIRST} NAME_WITHOUT_EXTENSION )
GetFileName( PopulationAverage_TAG ${ImageToRegTo} NAME_WITHOUT_EXTENSION )
set( NII_FILE_PREFIX ${OutputDir}/${PopulationAverage_TAG}_to_${TEMPLATE_FIRST_TAG}_ANTS )
set( WARP_FILE ${NII_FILE_PREFIX}Warp.nii.gz )
set( AFFINE_FILE ${NII_FILE_PREFIX}Affine.txt )
set( TRANSFORM ${OutputDir}/Init_transform.txt )

If( ${IS_SCALED} == TRUE )
  set( Cmd ${ITKTransformTools} scale ${IMAGE_GRID} ${TEMPLATE_FIRST} ${temp}/ImageGrid.nrrd ${temp}/AverageGrid.nrrd )
  echo( ${Cmd} )
  if(${step} < 1)
    run( output ${Cmd} )
    echo( ${output} )
  endif (${step} < 1)
EndIf( ${IS_SCALED} == TRUE )

If( ${WARP_ONLY} == FALSE )
  IF( ${IS_SCALED} == TRUE )
    set( count 0 )
    foreach( i ${TEMPLATE} )
      GetFilename( current ${i} NAME_WITHOUT_EXTENSION )
      set( template_upscaled ${temp}/${current}_upscaled.nrrd )
      set( Cmd ${ResampleVolume2} ${i} -R ${temp}/AverageGrid.nrrd ${template_upscaled} )
      echo( ${Cmd} )
      if(${step} < 2)
        run( output ${Cmd} )
        echo( ${output} )
      endif (${step} < 2)
      Set( Cmd ${ImageMath} ${template_upscaled} -changeSp 1,1,1 -outfile ${template_upscaled} -type float )
      echo( ${Cmd} )
      if(${step} < 3)
        run( output ${Cmd} )
        echo( ${output} )
      endif(${step} < 3)
      if( ${count} > 0 )
        set( TEMPLATE_LIST ${TEMPLATE_LIST} ${template_upscaled} )
      else()
        set( TEMPLATE_LIST ${template_upscaled} )
      endif()
      inc( count 1)
      int( count )
    endforeach()
    set( TEMPLATE ${TEMPLATE_LIST} )

    IF(${TEMPLATE_mask_FILENAME} != '' )
      set( count 0 )
      foreach( i ${TEMPLATE_mask_FILENAME} )
        GetFilename( current ${i} NAME_WITHOUT_EXTENSION )
        set ( TEMPLATE_mask_upscaled ${temp}/${current}_upscaled.nrrd )
        set( Cmd ${ResampleVolume2} ${i} -R ${temp}/AverageGrid.nrrd ${TEMPLATE_mask_upscaled} -i nn )
        echo( ${Cmd} )
        if(${step} < 4)
          run( output ${Cmd} )
          echo( ${output} )
        endif(${step} < 4)
        Set( Cmd ${ImageMath} ${TEMPLATE_mask_upscaled} -changeSp 1,1,1 -outfile ${TEMPLATE_mask_upscaled} )
        echo( ${Cmd} )
        if(${step} < 5)
          run( output ${Cmd} )
          echo( ${output} )
        endif(${step} < 5)
        if( ${count} > 0 )
          set( TEMPLATE_mask_FILENAME_LIST ${TEMPLATE_mask_FILENAME_LIST} ${TEMPLATE_mask_upscaled} )
        else()
          set( TEMPLATE_mask_FILENAME_LIST ${TEMPLATE_mask_upscaled} )
        endif()
        inc( count 1)
        int( count )
      endforeach()
      set( TEMPLATE_mask_FILENAME ${TEMPLATE_mask_FILENAME_LIST} )
    ENDIF(${TEMPLATE_mask_FILENAME} != '' )
  ENDIF( ${IS_SCALED} == TRUE )


  #####Uses RI for an initialization and saves transform#####################
  set( RegCmd ${RegisterImages} --initialization CentersOfMass ${ImageToRegTo} ${TEMPLATE_FIRST} --saveTransform ${TRANSFORM})
  echo( ${RegCmd} )
  if (${step} < 6)
    run( output ${RegCmd} )
    echo( ${output} )
  endif (${step} < 6)

  #####ITKTransformTools#####################
  set ( Grid ${OutputDir}/InitGrid.nrrd )
  set ( ITKTTCmd ${ITKTransformTools} size ${TEMPLATE_FIRST} ${TRANSFORM} --grid ${Grid} )

  echo( ${ITKTTCmd} )
  if (${step} < 7)
    run( output ${ITKTTCmd} )
    echo( ${output} )
  endif (${step} < 7)

  #####ResampleVolume2#####################
  set( count 0 )
  foreach( i ${TEMPLATE} )
    GetFileName( TEMPLATE_TAG ${i} NAME_WITHOUT_EXTENSION )
    set ( TEMPLATE_RV2_current ${temp}/${TEMPLATE_TAG}_initialized.nrrd ) 
    set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${i} ${TEMPLATE_RV2_current})
    echo( ${RV2Cmd} )
    if (${step} < 8)
      run( output ${RV2Cmd} )
      echo( ${output} )
    endif (${step} < 8)
    if( ${count} > 0 )
      set( TEMPLATE_RV2 ${TEMPLATE_RV2} ${TEMPLATE_RV2_current} )
    else()
      set( TEMPLATE_RV2 ${TEMPLATE_RV2_current} )
    endif()
    inc( count 1 )
    int( count )
  endforeach()

  IF(${TEMPLATE_mask_FILENAME} != '' )
    set( count 0 )
    Foreach( i ${TEMPLATE_mask_FILENAME} )
      GetFilename( current ${i} NAME_WITHOUT_EXTENSION )
      set ( TEMPLATE_MASK_FILE_RV2_current ${temp}/${current}_initialized.nrrd )
      set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${i} ${TEMPLATE_MASK_FILE_RV2_current})
      echo( ${RV2Cmd} )
      if (${step} < 9)
        run( output ${RV2Cmd} )
        echo( ${output} )
      endif (${step} < 9)
      if( ${count} > 0 )
        set( TEMPLATE_MASK_FILE_RV2 ${TEMPLATE_MASK_FILE_RV2} ${TEMPLATE_MASK_FILE_RV2_current} )
      else()
        set( TEMPLATE_MASK_FILE_RV2 ${TEMPLATE_MASK_FILE_RV2_current} )
      endif()
      inc( count 1 )
      int( count )
    EndForeach()
  ENDIF(${TEMPLATE_mask_FILENAME} != '' )

  IF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
    set( count 0 )
    Foreach( i ${TEMPLATE_MASK_FILE_RV2} )
      GetFilename( current ${i} NAME_WITHOUT_EXTENSION )
      set ( TEMPLATE_mask_IM ${temp}/${current}_Thresholded.nrrd )
      set ( IMCmd ${ImageMath} ${i} -outfile ${TEMPLATE_mask_IM} -threshold 0.5,42000)
      echo( ${IMCmd} )
      if (${step} < 10)
        run( output ${IMCmd} )
        echo( ${output} )
      endif (${step} < 10)
      if( ${count} > 0 )
        set( TEMPLATE_MASK_FILE_RV2_LIST ${TEMPLATE_MASK_FILE_RV2_LIST} ${TEMPLATE_mask_IM} )
      else()
        set( TEMPLATE_MASK_FILE_RV2_LIST ${TEMPLATE_mask_IM} )
      endif()
      inc( count 1 )
      int( count )
    EndForeach()
    set( TEMPLATE_MASK_FILE_RV2 ${TEMPLATE_MASK_FILE_RV2_LIST} )

    set( count 0 )
    Foreach( i ${PopAverage_mask_FILENAME} )
      GetFilename( current ${i} NAME_WITHOUT_EXTENSION )
      set ( PopAverage_mask_IM ${temp}/${current}_Thresholded.nrrd )
      set ( IMCmd ${ImageMath} ${i} -outfile ${PopAverage_mask_IM} -threshold 0.5,42000)
      echo( ${IMCmd} )
      if (${step} < 11)
        run( output ${IMCmd} )
        echo( ${output} )
      endif (${step} < 11)
      if( ${count} > 0 )
        set( PopAverage_mask_LIST ${PopAverage_mask_LIST} ${PopAverage_mask_IM} )
      else()
        set( PopAverage_mask_LIST ${PopAverage_mask_IM} )
      endif()
      inc( count 1 )
      int( count )
    EndForeach()
    set( PopAverage_mask_FILENAME ${PopAverage_mask_LIST} )
  ENDIF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )

  IF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
    Set( count 0 )
    foreach( i ${TEMPLATE_MASK_FILE_RV2} )
      GetParam( PopAverage_mask_current ${PopAverage_mask_FILENAME} ${count} )
      Set( mask_add_Cmd_current -m MSQ[${PopAverage_mask_current}, ${i}, 1, 0] )
      Inc( count 1)
      Int( count )
      Set( mask_add_Cmd ${mask_add_Cmd} ${mask_add_Cmd_current} ) 
    EndForeach()
    If( ${FIRST_MASK_IS_FULL_BRAIN} == TRUE )
      GetParam( fixed_full_brain ${PopAverage_mask_FILENAME} 0 )
      Set( mask_add_Cmd ${mask_add_Cmd} -x ${fixed_full_brain} )
    EndIf()
  ELSE(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )
    set( mask_add_Cmd '' )
  ENDIF(${TEMPLATE_mask_FILENAME} != '' && ${PopAverage_mask_FILENAME} != '' )

  IF(${Diffeomorphic} == TRUE )
    ####Diffeomorphic
    set( diff_Elast_Cmd -r Gauss[1,0] -t SyN[0.25] -i 30x35x40 )
  ELSE(${Diffeomorphic} == TRUE) 
    ####Elastic
    set( diff_Elast_Cmd -r Gauss[3,0] -i 30x20x10 -t Elast[1.5] )
  ENDIF(${Diffeomorphic} == TRUE)

  Set( count 0 )
  foreach( i ${TEMPLATE_RV2} )
    GetParam( ImageToRegTo_current ${PopulationAverage} ${count} )
    GetParam( Measure_current ${Measure} ${count} )
    GetParam( bin_current ${bin_number} ${count} )
    Set( reg_Cmd_current -m ${Measure_current}[${ImageToRegTo_current}, ${i}, 1, ${bin_current}] )
    Inc( count 1)
    Int( count )
    Set( reg_Cmd ${reg_Cmd} ${reg_Cmd_current} ) 
  endforeach()

  set ( AntsCmd ${ANTS} 3 ${reg_Cmd} ${mask_add_Cmd} ${diff_Elast_Cmd} -o ${NII_FILE_PREFIX} )
  echo( ${AntsCmd} )
  if (${step} < 12)
    run( output ${AntsCmd} )
    echo( ${output} )
  endif (${step} < 12)
  #####Warp templates#####################
  foreach( i ${TEMPLATE_RV2} )
    GetFileName( TEMPLATE_TAG ${i} NAME_WITHOUT_EXTENSION )
    set( TEMPLATE_RV2_WARP ${temp}/${TEMPLATE_TAG}_ANTS_Warp.nrrd  )
    set( WarpCmd ${WarpImageMultiTransform} 3 ${i} ${TEMPLATE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} )
    echo( ${WarpCmd} )
    if (${step} < 13)
      Run( output ${WarpCmd} )
      echo( ${output} )
    endif (${step} < 13)
  endforeach()
Else( ${WARP_ONLY} == FALSE )
  #####ITKTransformTools#####################
  set ( Grid ${OutputDir}/InitGrid.nrrd )
  set ( ITKTTCmd ${ITKTransformTools} size ${TEMPLATE_FIRST} ${TRANSFORM} --grid ${Grid} )

  echo( ${ITKTTCmd} )
  if (${step} < 7)
    run( output ${ITKTTCmd} )
    echo( ${output} )
  endif (${step} < 7)
EndIf( ${WARP_ONLY} == FALSE )

#####Warp segmentation############
foreach( i ${TEMPLATE_SEGMENTATION} )
  GetFileName( TEMPLATE_SEGMENTATION_TAG ${i} NAME_WITHOUT_EXTENSION )
  If( ${IS_SCALED} == TRUE )
    set( TEMPLATE_SEGMENTATION_upscaled ${temp}/Segmentation_upscaled.nrrd )
    set( Cmd ${ResampleVolume2} ${i} -R ${temp}/AverageGrid.nrrd ${TEMPLATE_SEGMENTATION_upscaled} -i nn )
    echo( ${Cmd} )
    if(${step} < 14)
      run( output ${Cmd} )
      echo( ${output} )
    endif(${step} < 14)
    Set( Cmd ${ImageMath} ${TEMPLATE_SEGMENTATION_upscaled} -changeSp 1,1,1 -outfile ${TEMPLATE_SEGMENTATION_upscaled} )
    echo( ${Cmd} )
    if(${step} < 15)
      run( output ${Cmd} )
      echo( ${output} )
    endif(${step} < 15)
    set( i ${TEMPLATE_SEGMENTATION_upscaled} )
  EndIf( ${IS_SCALED} == TRUE )

  set ( SEGMENTATION_FILE_RV2 ${temp}/${TEMPLATE_SEGMENTATION_TAG}_initialized.nrrd )
  set ( RV2Cmd ${ResampleVolume2} -f ${TRANSFORM} -i nn -R ${Grid} ${i} ${SEGMENTATION_FILE_RV2})
  echo( ${RV2Cmd} )
  if (${step} < 16)
    run( output ${RV2Cmd} )
    echo( ${output} )
  endif (${step} < 16)

  set ( SEGMENTATION_FILE_RV2_WARP ${OutputDir}/${TEMPLATE_SEGMENTATION_TAG}.nrrd )
  set( WarpCmd ${WarpImageMultiTransform} 3 ${SEGMENTATION_FILE_RV2} ${SEGMENTATION_FILE_RV2_WARP} ${WARP_FILE} ${AFFINE_FILE} -R ${ImageToRegTo} --use-NN)
  echo( ${WarpCmd} )
  if (${step} < 17)
    run( output ${WarpCmd} )
    echo( ${output} )
  endif (${step} < 17)
endforeach()
