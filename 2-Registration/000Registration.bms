Int(${step})
#########################################################
MakeDirectory( ${tempDir} )

Set( CREATEB0 FALSE )
Set( CREATEIDWI FALSE )
Set( COMPUTEFA FALSE )
Set( COMPUTEMD FALSE )
Set( COMPUTECOLORFA FALSE )
Set( COMPUTERD FALSE )
Set( COMPUTEAD FALSE )
Set( skullStrip FALSE )
Set( computeOrientation FALSE )
Set( manualOrientation '' )
Set (biasCorrection FALSE)
Set(im1 '')
Set(im2 '')
Set(im3 '')
Set(initialTransform '')

If( ${Type} == 'scalar' )
  Set( INPUTTYPE scalar )
EndIf( ${Type} == 'scalar' )
If( ${Type} == 'DTI' )
  Set( INPUTTYPE DTI )
  Set( COMPUTEFA TRUE )
  Set( COMPUTEMD TRUE )
  Set( COMPUTECOLORFA TRUE )
  Set( COMPUTERD TRUE )
  Set( COMPUTEAD TRUE )
EndIf( ${Type} == 'DTI' )
If( ${Type} == 'DWI' )
  Set( INPUTTYPE DWI )
  Set( CREATEB0 TRUE )
  Set( CREATEIDWI TRUE )
  Set( COMPUTEFA TRUE )
  Set( COMPUTEMD TRUE )
  Set( COMPUTECOLORFA TRUE )
  Set( COMPUTERD TRUE )
  Set( COMPUTEAD TRUE )
EndIf( ${Type} == 'DWI' )
Set( template ${TEMPLATE_DIR}/${TEMPLATE_FILE} )
If( ${orientation} != '' )
  Set (COMPUTEORIENTATION TRUE)
  Set (MANUALORIENTATION ${orientation})
EndIf( ${orientation} != '' )

ForEach( i ${CASES} )
  set (OutSubjDir ${dir}/${OUTPUT_PRE_SUBDIR}/${i})
  set (InSubjDir ${dir}/${INPUT_PRE_SUBDIR}/${i}/${INPUT_POST_SUBDIR} )
  MakeDirectory( ${OutSubjDir}/${PROCESS_SUBDIR} )
  if( ${ScriptName} != '' )
    GetFilename( name ${ScriptName} NAME )
    CopyFile( ${ScriptName} ${OutSubjDir}/${PROCESS_SUBDIR}/${name} )
  Endif( ${ScriptName} != '' )
  Set( rootName ${i} )
  Set( inputImage ${InSubjDir}/${i}${INPUT_SUFFIX} )
  GetFilename (INPUT ${InSubjDir}/${i}${INPUT_SUFFIX} NAME_WITHOUT_EXTENSION)
  GetFilename (pointExt ${i}${INPUT_SUFFIX} EXTENSION)
  RegEx(EXT ${pointExt} '\.' REPLACE '')
  Set( outputDirectory ${OutSubjDir}/${PROCESS_SUBDIR} )
  If( ${TRANSFORM_SUFFIX} != '' )
    Set( TRANSFORMATIONFILE ${InSubjDir}/${i}${TRANSFORM_SUFFIX} )
  Else( ${TRANSFORM_SUFFIX} != '' )
   Set( TRANSFORMATIONFILE '')
  EndIf( ${TRANSFORM_SUFFIX} != '' )
  If( ${ADDITIONAL_IMAGES_SUFFIX} != '' )
    If( GetListSize( ${ADDITIONAL_IMAGES_SUFFIX} ) > 3 )
      Echo( "Give max 3 additional images" )
      Exit()
    EndIf( GetListSize( ${ADDITIONAL_IMAGES_SUFFIX} ) > 3 )
    set( count 1 )
    ForEach( j ${ADDITIONAL_IMAGES_SUFFIX} )
      Set(im${count} ${InSubjDir}/${i}$j)
      Inc( ${count} 1 )
      Int( ${count} )
    EndForEach( j ${ADDITIONAL_IMAGES_SUFFIX} )
  EndIf( ${ADDITIONAL_IMAGES_SUFFIX} != '' )
  If( ${ADDITIONAL_IMAGES_NN_SUFFIX} != '' )
    If( GetListSize( ${ADDITIONAL_IMAGES_NN_SUFFIX} ) > 2 )
      Echo( "Give max 2 additional images (NN)" )
      Exit()
    EndIf( GetListSize( ${ADDITIONAL_IMAGES_NN_SUFFIX} ) > 2 )
    set( count 1 )
    ForEach( j ${ADDITIONAL_IMAGES_NN_SUFFIX} )
      Set(imNN${count} ${InSubjDir}/${i}$j)
      Inc( ${count} 1 )
      Int( ${count} )
    EndForEach( j ${ADDITIONAL_IMAGES_NN_SUFFIX} )
  EndIf( ${ADDITIONAL_IMAGES_NN_SUFFIX} != '' )
  If( ${INITIAL_TRANS_SUFFIX} != '' )
    Set(InitialTransform ${InSubjDir}/${i}${INITIAL_TRANS_SUFFIX} )
  Else( ${INITIAL_TRANS_SUFFIX} != '' )
    Set(InitialTransform '')
  EndIf( ${INITIAL_TRANS_SUFFIX} != '' )
  Include(DWIProcessPipelineBatchMake.bms)
EndForEach( i ${CASES} )
